<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- This program is free software; you can redistribute it and/or      -->
<!-- modify it under the terms of the GNU General Public License as     -->
<!-- published by the Free Software Foundation; either version 2 of the -->
<!-- License, or (at your option) any later version.                    -->
<!--                                                                    -->
<!-- This program is distributed in the hope that it will be useful,    -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of     -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      -->
<!-- GNU General Public License for more details.                       -->
<!--                                                                    -->
<!-- You should have received a copy of the GNU General Public License  -->
<!-- along with this program; if not, write to the                      -->
<!-- Free Software Foundation, Inc.,                                    -->
<!-- 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA             -->
<!--                                                                    -->
<!--                 Sipp default 'uas' scenario.                       -->
<!--                                                                    -->

<scenario name="Basic UAS responder">
  <!-- By adding rrs="true" (Record Route Sets), the route sets         -->
  <!-- are saved and used for following messages sent. Useful to test   -->
  <!-- against stateful SIP proxies/B2BUAs.                             -->
  <recv request="CANCEL" optional="global" next="2">
  </recv>

  <recv request="ACK" optional="global" next="20">
  </recv>

  <recv request="INVITE" crlf="true" rrs="true">
        <action>
                <ereg regexp="<(.*)>"
                        search_in="hdr"
                        header="Contact"
                        checkit="true"
                        assign_to="2,2"/>
		<ereg regexp="Record-Route: (.*);lr.*"
			search_in="msg"
			checkit="true"
			assign_to="3,3"/>
	</action>
  </recv>

  <!-- The '[last_*]' keyword is replaced automatically by the          -->
  <!-- specified header if it was present in the last message received  -->
  <!-- (except if it was a retransmission). If the header was not       -->
  <!-- present or if no message has been received, the '[last_*]'       -->
  <!-- keyword is discarded, and all bytes until the end of the line    -->
  <!-- are also discarded.                                              -->
  <!--                                                                  -->
  <!-- If the specified header was present several times in the         -->
  <!-- message, all occurences are concatenated (CRLF seperated)        -->
  <!-- to be used in place of the '[last_*]' keyword.                   -->

<nop>
	<action>
		<assignstr assign_to="100" value="[last_Via:]"/>
	</action>
</nop>
<nop>
        <action>
                <assignstr assign_to="101" value="[last_CSeq:]"/>
        </action>
</nop>

 <send>
   <![CDATA[

      SIP/2.0 100 Trying
      [last_Via:]
      [last_From:]
      [last_To:];tag=[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Type: application/sdp
      Content-Length: [len]

    ]]>
  </send>


  <send>
   <![CDATA[

      SIP/2.0 180 Ringing
      [last_Via:]
      [last_From:]
      [last_To:];tag=[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      [last_Record-Route:]
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Type: application/sdp
      Content-Length: [len]

    ]]>
  </send>

 <pause distribution="uniform"
	min="1000"
	max="5000"
	crlf="true"/>

<!-- **************************************************************** -->
<!-- ******** ANSWER THE CALL WITH A 200 G711, SEND A BYE *********** -->
<!-- **************************************************************** -->


  <send retrans="500">
    <![CDATA[

      SIP/2.0 200 OK
      [last_Via:]
      [last_From:]
      [last_To:];tag=[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      [last_Record-Route:]
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Type: application/sdp
      Content-Length: [len]

      v=0
      o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
      s=-
      c=IN IP[media_ip_type] [media_ip]
      t=0 0
      m=audio [media_port] RTP/AVP 0 101
      a=rtpmap:0 PCMU/8000 
      a=rtpmap:101 telephone-event/8000 
      a=fmtp:101 0-15 
      a=ptime:20
      a=sendrecv

    ]]>
  </send>

  <nop>
    <action>
       <exec play_pcap_audio="g711.pcap"/>
    </action>
  </nop>

  <recv request="ACK" rtd="true">
        <action>
                <ereg regexp="(.*)"
                        search_in="hdr"
			header="From:"
                        assign_to="1,5"/>
                <ereg regexp="(.*)"
                        search_in="hdr"
			header="To:"
                        assign_to="1,6"/>
        </action>

  </recv>

<pause milliseconds="8000"/>

  <send retrans="500">
  <![CDATA[
      BYE [$2] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      To:[$5]
      From:[$6]
      [last_Call-ID:]
      Route: [$3];lr>
      CSeq: [cseq] BYE 
      Max-Forwards: 70
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Type: application/sdp
      Content-Length: 0 
    ]]>
  </send>

  <recv response="200"
	next="20"
        crlf="true">
  </recv>


 <label id="2"/>
  <send>
    <![CDATA[

      SIP/2.0 200 canceling
      [last_Via:]
      [last_From:]
      [last_To:]
      [last_Call-ID:]
      [last_CSeq:]
      Content-Length: 0

    ]]>
  </send>

  <send crlf="true" next="20">
    <![CDATA[

      SIP/2.0 487 Request Terminated
      [$100]
      [last_From:]
      [last_To:];tag=[call_number]
      [last_Call-ID:]
      [$101]	
      [last_Record-Route:]
      Content-Length: 0

    ]]>
  </send>

<!-- **************************************************************** -->
<!-- ****** WAIT FOR THE CALL TO TEAR DOWN - 4000 MILLISECONDS ****** -->
<!-- **************************************************************** -->

 <label id="20"/>
  <!-- Keep the call open for a while in case the 200 is lost to be     -->
  <!-- able to retransmit it if we receive the BYE again.               -->
  <pause milliseconds="4000"/>


  <!-- definition of the response time repartition table (unit is ms)   -->
  <ResponseTimeRepartition value="10, 20, 30, 40, 50, 100, 150, 200"/>

  <!-- definition of the call length repartition table (unit is ms)     -->
  <CallLengthRepartition value="10, 50, 100, 500, 1000, 5000, 10000"/>

</scenario>

